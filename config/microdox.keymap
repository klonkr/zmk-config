/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/
{
        behaviors {
                hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <250>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Å  |  Ö  |  .  |  P  |  Y   |   |  F  |  G   |  C  |  R  |  L  |
// |  A  |  O  |  E  |  U  |  I   |   |  D  |  H   |  T  |  N  |  S  |
// |  Ä  |  Q  |  J  |  K  |  X   |   |  B  |  M   |  W  |  V  |  Z  |
//             |  X  | NAV |  SPC |   | TAB | SYM  | CDE |
                        bindings = <
   &kp LBKT     &kp SEMICOLON   &mt COMMA DOT   &kp P           &kp Y           &kp F           &kp G           &kp C           &kp R         &kp L
   &hm LGUI A   &hm LCTRL O     &hm LALT E      &hm LSHFT U     &kp I           &kp D           &hm LSHIFT H    &hm LALT T      &hm LCTRL N   &hm LGUI S
   &kp APOS     &kp Q           &kp J           &kp K           &kp X           &kp B           &kp M           &kp W           &kp V         &kp Z
                                &kp X           &mo 1           &lt 3 SPACE     &lt 2 TAB       &mo 1           &none
                        >;
                };
                nav_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR|     | ESC |  ~   |     |   | PGUP | LEFT |  UP  | RGT | DEL  |
// | BT1 | GUI | ALT | CTRL | NUM |   | PDWN | LEFT | DOWN | RGT | BKSP |
// | BT2 |     |     |      |     |   |      | ENT  | HOME | END |      |
//             |     |      |     |   |      |      |      |
                        bindings = <
   &bt BT_CLR   &none           &kp ESC         &kp TILDE       &none           &kp PG_UP    &kp LC(LEFT)       &kp UP   &kp LC(RIGHT)  &kp DEL
   &bt BT_SEL 0 &kp LCTRL       &kp RALT        &kp LSHFT       &none           &kp PG_DN    &kp LEFT           &kp DOWN &kp RIGHT      &kp BSPC
   &bt BT_SEL 1 &none           &none           &none           &none           &none        &kp RET            &kp HOME &kp END        &none
                                &none           &none           &none           &none        &none              &none
                        >;
                };

//                 sym_layer { 
// // -----------------------------------------------------------------------------------------
// // |  !  |  @   |  #  |  $   |  %  |   |     |  1  |  2  |  3  |     |
// // |     | CTLR | ALT | SHFT |     |   |     |  4  |  5  |  6  |  0  |
// // |     |      |     |      |     |   |     |  7  |  8  |  9  |     |
// //              | GUI |      | SPC |   |     |     |     |
//                         bindings = <
//    &kp EXCL     &kp AT          &kp HASH        &kp DLLR        &kp PRCNT       &none   &kp N1  &kp N2  &kp N3  &kp FSLH
//    &none        &kp LCTRL       &kp RALT        &kp LSHFT       &none           &none   &kp N4  &kp N5  &kp N6  &kp N0
//    &none        &none           &none           &none           &none           &none   &kp N7  &kp N8  &kp N9  &kp MINUS
//                                 &kp LGUI        &none           &kp SPACE       &none   &none   &none
//                         >;
//                 };

                num_layer {
// -----------------------------------------------------------------------------------------
// |  <  |  [  |  ]  |   >  |  :  |   |     |  1  |  2  |  3  |     |
// |  {  |  (  |  )  |   }  |  ;  |   |     |  4  |  5  |  6  |  0  |
// |  *  | "|" |  ?  |   !  |  =  |   |     |  7  |  8  |  9  |     |
//             |     | SHFT | RET |   |     |     |     |
                        bindings = <
   &kp NON_US_BSLH      &kp RA(N8)              &kp RA(N9)      &kp LS(NON_US_BSLH)     &kp LS(DOT)     &none  &kp N1  &kp N2  &kp N3  &kp FSLH
   &kp RA(N7)           &kp LS(N8)              &kp LS(N9)      &kp RA(N0)              &kp LS(COMMA)   &none  &kp N4  &kp N5  &kp N6  &kp N0
   &kp LS(BSLH)         &kp RA(NON_US_BSLH)     &kp LS(MINUS)   &kp LS(N1)              &kp LS(N0)      &none  &kp N7  &kp N8  &kp N9  &kp MINUS
                                                &none           &kp LSHFT               &kp RET         &none  &none   &none
                        >;
                };

                fun_layer { 
// -----------------------------------------------------------------------------------------
// |     |      |     |      |     |   |     |  F1  |  F2 |  F3 |  F4 |
// |     | CTLR | ALT | SHFT |     |   |     |  F5  |  F6 |  F7 |  F8 |
// |     |      |     |      |     |   |     |  F9  | F10 | F11 | F12 |
//              |     |      |     |   |     |      |     |
                        bindings = <
   &none        &none           &none           &none           &none   &none   &kp F1  &kp F2  &kp F3  &kp F4
   &none        &kp LCTRL       &kp RALT        &kp LSHFT       &none   &none   &kp F5  &kp F6  &kp F7  &kp F8
   &none        &none           &none           &none           &none   &none   &kp F9  &kp F10 &kp F11  &kp F12
                                &none           &none           &none   &none   &none   &none
                        >;
                };
        };
};
